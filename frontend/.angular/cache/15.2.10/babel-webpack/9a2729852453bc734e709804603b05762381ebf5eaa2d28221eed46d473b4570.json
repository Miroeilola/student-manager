{"ast":null,"code":"import { catchError, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StudentService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = '/api/students';\n  }\n  getStudents() {\n    return this.http.get(this.baseUrl).pipe(catchError(error => {\n      console.error('Error fetching students, returning mock data', error);\n      return of(this.mockStudents());\n    }));\n  }\n  mockStudents() {\n    let students = [];\n    for (let i = 1; i <= 10; i++) {\n      students.push({\n        id: i,\n        firstname: `Firstname ${i}`,\n        lastname: `Lastname ${i}`,\n        email: `Email ${i}`\n      });\n    }\n    return students;\n  }\n  static #_ = this.ɵfac = function StudentService_Factory(t) {\n    return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StudentService,\n    factory: StudentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAEA,SAAqBA,UAAU,EAAEC,EAAE,QAAQ,MAAM;;;AAMjD,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,eAAe;EAEO;EAExCC,WAAW;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,IAAI,CAACC,OAAO,CAAC,CAACC,IAAI,CAChDR,UAAU,CAACS,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACpE,OAAOR,EAAE,CAAC,IAAI,CAACU,YAAY,EAAE,CAAC;IAChC,CAAC,CAAC,CACH;EACH;EAEQA,YAAY;IAClB,IAAIC,QAAQ,GAAc,EAAE;IAC5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC5BD,QAAQ,CAACE,IAAI,CAAC;QACZC,EAAE,EAAEF,CAAC;QACLG,SAAS,EAAE,aAAaH,CAAC,EAAE;QAC3BI,QAAQ,EAAE,YAAYJ,CAAC,EAAE;QACzBK,KAAK,EAAE,SAASL,CAAC;OAClB,CAAC;;IAEJ,OAAOD,QAAQ;EACjB;EAAC;qBAzBUV,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAiB,SAAdjB,cAAc;IAAAkB,YAFb;EAAM","names":["catchError","of","StudentService","constructor","http","getStudents","get","baseUrl","pipe","error","console","mockStudents","students","i","push","id","firstname","lastname","email","factory","providedIn"],"sourceRoot":"","sources":["/Users/miro/Programming/Vamk/JavaPalvelinohjelmointi/student-manager/frontend/src/app/student/student.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, catchError, of } from 'rxjs';\nimport { Student } from '../models/student';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n  private baseUrl = '/api/students';\n\n  constructor(private http: HttpClient) { }\n\n  getStudents(): Observable<Student[]> {\n    return this.http.get<Student[]>(this.baseUrl).pipe(\n      catchError(error => {\n        console.error('Error fetching students, returning mock data', error);\n        return of(this.mockStudents());\n      })\n    );\n  }\n\n  private mockStudents(): Student[] {\n    let students: Student[] = [];\n    for (let i = 1; i <= 10; i++) {\n      students.push({\n        id: i,\n        firstname: `Firstname ${i}`,\n        lastname: `Lastname ${i}`,\n        email: `Email ${i}`\n      });\n    }\n    return students;\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}