{"ast":null,"code":"import { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../student.service\";\nimport * as i2 from \"@angular/material/table\";\nimport * as i3 from \"@angular/material/sort\";\nfunction StudentListComponent_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 11);\n    i0.ɵɵtext(1, \"ID\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StudentListComponent_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const student_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(student_r10.id);\n  }\n}\nfunction StudentListComponent_th_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 11);\n    i0.ɵɵtext(1, \"Lastname\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StudentListComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const student_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(student_r11.lastname);\n  }\n}\nfunction StudentListComponent_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 11);\n    i0.ɵɵtext(1, \"Firstname\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StudentListComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const student_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(student_r12.firstname);\n  }\n}\nfunction StudentListComponent_th_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 11);\n    i0.ɵɵtext(1, \"Email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StudentListComponent_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const student_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(student_r13.email);\n  }\n}\nfunction StudentListComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 13);\n  }\n}\nfunction StudentListComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 14);\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 20];\n};\nexport class StudentListComponent {\n  constructor(studentService) {\n    this.studentService = studentService;\n    this.dataSource = new MatTableDataSource();\n    this.displayedColumns = ['id', 'firstname', 'lastname', 'email'];\n  }\n  ngOnInit() {\n    this.studentService.getStudents().subscribe(data => {\n      this.dataSource.data = data;\n    });\n  }\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n  static #_ = this.ɵfac = function StudentListComponent_Factory(t) {\n    return new (t || StudentListComponent)(i0.ɵɵdirectiveInject(i1.StudentService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StudentListComponent,\n    selectors: [[\"app-student-list\"]],\n    viewQuery: function StudentListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatSort, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    decls: 17,\n    vars: 5,\n    consts: [[1, \"mat-elevation-z8\"], [\"mat-table\", \"\", \"matSort\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"id\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"lastname\"], [\"matColumnDef\", \"firstname\"], [\"matColumnDef\", \"email\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"showFirstLastButtons\", \"\", \"aria-label\", \"Select page of periodic elements\", 3, \"pageSizeOptions\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function StudentListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1);\n        i0.ɵɵelementContainerStart(2, 2);\n        i0.ɵɵtemplate(3, StudentListComponent_th_3_Template, 2, 0, \"th\", 3);\n        i0.ɵɵtemplate(4, StudentListComponent_td_4_Template, 2, 1, \"td\", 4);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(5, 5);\n        i0.ɵɵtemplate(6, StudentListComponent_th_6_Template, 2, 0, \"th\", 3);\n        i0.ɵɵtemplate(7, StudentListComponent_td_7_Template, 2, 1, \"td\", 4);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(8, 6);\n        i0.ɵɵtemplate(9, StudentListComponent_th_9_Template, 2, 0, \"th\", 3);\n        i0.ɵɵtemplate(10, StudentListComponent_td_10_Template, 2, 1, \"td\", 4);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(11, 7);\n        i0.ɵɵtemplate(12, StudentListComponent_th_12_Template, 2, 0, \"th\", 3);\n        i0.ɵɵtemplate(13, StudentListComponent_td_13_Template, 2, 1, \"td\", 4);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(14, StudentListComponent_tr_14_Template, 1, 0, \"tr\", 8);\n        i0.ɵɵtemplate(15, StudentListComponent_tr_15_Template, 1, 0, \"tr\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"mat-paginator\", 10);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(4, _c0));\n      }\n    },\n    dependencies: [i2.MatTable, i2.MatHeaderCellDef, i2.MatHeaderRowDef, i2.MatColumnDef, i2.MatCellDef, i2.MatRowDef, i2.MatHeaderCell, i2.MatCell, i2.MatHeaderRow, i2.MatRow, i3.MatSort, i3.MatSortHeader],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,kBAAkB,QAAQ,yBAAyB;AAG5D,SAASC,OAAO,QAAQ,wBAAwB;;;;;;;ICCpCC,8BAAsD;IAAAA,kBAAE;IAAAA,iBAAK;;;;;IAC7DA,8BAAuC;IAAAA,YAAc;IAAAA,iBAAK;;;;IAAnBA,eAAc;IAAdA,oCAAc;;;;;IAKrDA,8BAAsD;IAAAA,wBAAQ;IAAAA,iBAAK;;;;;IACnEA,8BAAuC;IAAAA,YAAoB;IAAAA,iBAAK;;;;IAAzBA,eAAoB;IAApBA,0CAAoB;;;;;IAK3DA,8BAAsD;IAAAA,yBAAS;IAAAA,iBAAK;;;;;IACpEA,8BAAuC;IAAAA,YAAqB;IAAAA,iBAAK;;;;IAA1BA,eAAqB;IAArBA,2CAAqB;;;;;IAK5DA,8BAAsD;IAAAA,qBAAK;IAAAA,iBAAK;;;;;IAChEA,8BAAuC;IAAAA,YAAiB;IAAAA,iBAAK;;;;IAAtBA,eAAiB;IAAjBA,uCAAiB;;;;;IAG5DA,yBAA4D;;;;;IAC5DA,yBAAkE;;;;;;ADjB1E,OAAM,MAAOC,oBAAoB;EAK/BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAHlC,eAAU,GAAG,IAAIL,kBAAkB,EAAW;IAC9C,qBAAgB,GAAa,CAAC,IAAI,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,CAAC;EAEf;EAEtDM,QAAQ;IACN,IAAI,CAACD,cAAc,CAACE,WAAW,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAI;MACnD,IAAI,CAACC,UAAU,CAACD,IAAI,GAAGA,IAAI;IAC7B,CAAC,CAAC;EACJ;EAEAE,eAAe;IACb,IAAI,CAACD,UAAU,CAACE,IAAI,GAAG,IAAI,CAACA,IAAI;EAClC;EAAC;qBAfUT,oBAAoB;EAAA;EAAA;UAApBA,oBAAoB;IAAAU;IAAAC;MAAA;uBACpBb,OAAO;;;;;;;;;;;;QCZpBC,8BAA8B;QAItBA,gCAAgC;QAC5BA,mEAA6D;QAC7DA,mEAA0D;QAC9DA,0BAAe;QAGfA,gCAAsC;QAClCA,mEAAmE;QACnEA,mEAAgE;QACpEA,0BAAe;QAGfA,gCAAuC;QACnCA,mEAAoE;QACpEA,qEAAiE;QACrEA,0BAAe;QAGfA,iCAAmC;QAC/BA,qEAAgE;QAChEA,qEAA6D;QACjEA,0BAAe;QAEfA,qEAA4D;QAC5DA,qEAAkE;QACtEA,iBAAQ;QACRA,qCACgB;QACpBA,iBAAM;;;QA/BeA,eAAyB;QAAzBA,2CAAyB;QA0BlBA,gBAAiC;QAAjCA,sDAAiC;QACpBA,eAA0B;QAA1BA,uDAA0B;QAEhDA,eAA+B;QAA/BA,4DAA+B","names":["MatTableDataSource","MatSort","i0","StudentListComponent","constructor","studentService","ngOnInit","getStudents","subscribe","data","dataSource","ngAfterViewInit","sort","selectors","viewQuery"],"sourceRoot":"","sources":["/Users/miro/Programming/Vamk/JavaPalvelinohjelmointi/student-manager/frontend/src/app/student/student-list/student-list.component.ts","/Users/miro/Programming/Vamk/JavaPalvelinohjelmointi/student-manager/frontend/src/app/student/student-list/student-list.component.html"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Student } from 'src/app/models/student';\nimport { StudentService } from '../student.service';\nimport { MatSort } from '@angular/material/sort';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.scss']\n})\nexport class StudentListComponent {\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<Student>();\n  displayedColumns: string[] = ['id', 'firstname', 'lastname', 'email'];\n\n  constructor(private studentService: StudentService) { }\n\n  ngOnInit() {\n    this.studentService.getStudents().subscribe((data) => {\n      this.dataSource.data = data;\n    });\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n\n        <!-- ID Column -->\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\n            <td mat-cell *matCellDef=\"let student\">{{student.id}}</td>\n        </ng-container>\n\n        <!-- Lastname Column -->\n        <ng-container matColumnDef=\"lastname\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Lastname</th>\n            <td mat-cell *matCellDef=\"let student\">{{student.lastname}}</td>\n        </ng-container>\n\n        <!-- Firstname Column -->\n        <ng-container matColumnDef=\"firstname\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Firstname</th>\n            <td mat-cell *matCellDef=\"let student\">{{student.firstname}}</td>\n        </ng-container>\n\n        <!-- Email Column -->\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\n            <td mat-cell *matCellDef=\"let student\">{{student.email}}</td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\n    </mat-paginator>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}