{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StudentService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://student.manager.mironet.fi/api/students';\n  }\n  getStudents() {\n    return this.http.get(this.baseUrl);\n  }\n  static #_ = this.ɵfac = function StudentService_Factory(t) {\n    return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StudentService,\n    factory: StudentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,gDAAgD;EAE1B;EAExCC,WAAW;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,IAAI,CAACC,OAAO,CAAC;EAC/C;EAAC;qBAPUL,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAM,SAAdN,cAAc;IAAAO,YAFb;EAAM","names":["StudentService","constructor","http","getStudents","get","baseUrl","factory","providedIn"],"sourceRoot":"","sources":["/Users/miro/Programming/Vamk/JavaPalvelinohjelmointi/student-manager/frontend/src/app/student/student.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Student } from '../models/student';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n  private baseUrl = 'http://student.manager.mironet.fi/api/students';\n\n  constructor(private http: HttpClient) { }\n\n  getStudents(): Observable<Student[]> {\n    return this.http.get<Student[]>(this.baseUrl);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}